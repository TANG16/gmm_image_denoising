function [ll] = GMM_loglikelihood(X, theta)
% Calculate the log likelihood of X, given a mixture model.
% 
% The model assumes each column of X is independently generated by a
% mixture model with parameters theta.
%
% Arguments
%  X - A DxM matrix, whose every column corresponds to a patch in D
%      dimensions (typically D=64).
%  theta - A struct with fields:
%          means - A KxD matrix where K is the number of components in
%                  mixture and D is the dimension of the data.
%          covs - A DxDxK array whose every page is a covariance matrix of
%                 the corresponding component.
%          mix - A Kx1 vector with mixing proportions.
%

[~, M] = size(X);
[K, ~] = size(theta.mix);

if K==1
   ll = sum(log_mvnpdf(X', theta.means, theta.covs)); 
else    
    G = zeros(M, K); % G_ij = log(mvnpdf(x_i, theta_j) * mix_j)
    for k=1:K
        means_k = theta.means(k, :);
        covs_k = theta.covs(:,:, k);
        mix_k = theta.mix(k,:)';
        G(:, k) = log_mvnpdf(X', means_k, covs_k) + log(mix_k * ones(M, 1));
    end
    
    ll = sum(logsum(G, 2));
end
    
end